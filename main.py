import telebot
from telebot import types
from datetime import datetime
# –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤
import matplotlib.pyplot as plt
# –¥–ª—è –ë–∞–∑—ã –î–∞–Ω–Ω—ã—Ö
import random
from sqlalchemy import create_engine, Column, Integer, String
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker


# –°–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è  –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±–æ—Ç–µ
cat_pics = [
    'https://i.pinimg.com/736x/af/f0/1c/aff01cea24b478bec034cf412406dbe5.jpg',
    'https://i.pinimg.com/736x/b5/5b/5d/b55b5df98672c2df8d1f1098adaf6cb2.jpg',
    'https://i.pinimg.com/736x/92/24/c7/9224c73f577d398b338fd8e0ab03c91a.jpg',
    'https://i.pinimg.com/736x/63/e6/5c/63e65c9f222efd5f9a7656c00bd4de1a.jpg',
    'https://i.pinimg.com/736x/98/24/48/98244843072ce5f28b3512a2fbb2657b.jpg',
    'https://i.pinimg.com/736x/22/d2/63/22d26336c9ac88e7cad1efd24ea678ce.jpg',
    'https://i.pinimg.com/736x/65/90/5d/65905d14a7c80bc8ec2704fa03a2099b.jpg',
    'https://i.pinimg.com/736x/26/0d/bf/260dbf0233a6eefcf8f2228bb97c9b9c.jpg',
    'https://i.pinimg.com/736x/66/ee/54/66ee5421a7e39909287e4a23b2fae034.jpg',
    'https://i.pinimg.com/736x/34/b9/24/34b924da95a851485670954f037bfabe.jpg',
    'https://i.pinimg.com/736x/c0/0a/9e/c00a9ec8921a214b6f86ca07ecc0e54b.jpg',
    'https://i.pinimg.com/736x/63/d3/b2/63d3b2c7bc908c6183ccf4f399dcc1b8.jpg',
]

# –¢–æ–∫–µ–Ω API –±–æ—Ç–∞ Telegram
API_TOKEN = '7468399496:AAHJHhLnqW9vqMufmB-j9GGBxpJRHp9X_HM'
bot = telebot.TeleBot(API_TOKEN)

# –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ
DATA_FILE = 'userdata.json'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ORM
engine = create_engine('sqlite:///users_orm.db', echo=False)
Base = declarative_base()

# –ü—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏–ª–∏ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CATEGORIES = [
    "—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
    "–º–µ–¥–∏—Ü–∏–Ω–∞",
    "—Ç–∞–∫—Å–∏",
    "–º–∞–≥–∞–∑–∏–Ω—ã",
    "—Ñ—É–¥–∫–æ—Ä—Ç—ã",
    "—Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã",
    "–¥—Ä—É–≥–æ–µ"
]

# –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–º–æ–∂–µ—Ç —Ä–∞—Å—à–∏—Ä—è—Ç—å—Å—è –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
data = {
    "balance": 0,
    "expenses": {},          # —Å–ª–æ–≤–∞—Ä—å —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏–ª–∏ –¥–∞—Ç–∞–º
    "allmoney": [],         # —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏–π
    "financial_goals": {},  # —Ü–µ–ª–∏ –ø–æ —Ñ–∏–Ω–∞–Ω—Å–∞–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞–∫–æ–ø–∏—Ç—å —Å—É–º–º—É)
    "budget": 0,            # —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –±—é–¥–∂–µ—Ç
}


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –±–æ—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥", "–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥")
    markup.row("–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å", "–ü–æ–∫–∞–∑–∞—Ç—å —Ü–µ–ª–∏")
    markup.row("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±—é–¥–∂–µ—Ç", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª—å")
    markup.row("–î–∏–∞–≥—Ä–∞–º–º–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤")
    return markup


# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–∂–∏–¥–∞–µ—Ç –ª–∏ –æ–Ω –≤–≤–æ–¥ —Å—É–º–º—ã –∏–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
user_states = {}


#
class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    nickname = Column(String)


Base.metadata.create_all(engine)

Session = sessionmaker(bind=engine)
session = Session()


def save_nickname(user_id, nickname):
    user = session.query(User).filter_by(id=user_id).first()
    if user:
        user.nickname = nickname
    else:
        user = User(id=user_id, nickname=nickname)
        session.add(user)
    session.commit()


def get_nickname(user_id):
    user = session.query(User).filter_by(id=user_id).first()
    if user:
        return user.nickname
    return None


@bot.message_handler(commands=["start"])
def start(message):
    user_id = message.chat.id
    nickname = message.from_user.username
    save_nickname(user_id, nickname)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞
    bot.send_message(
        user_id,
        f"–ü—Ä–∏–≤–µ—Ç {nickname}üëã! "
        f"–ú–µ–Ω—è –∑–æ–≤—É—Ç –û–ª–µ–≥üëª. –Ø –±—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å —Ç–µ–±–µ –≤ —Ñ–∏–Ω–∞–Ω—Å–∞—Öüí∏.\n"
        f"–Ø —É–º–µ—é —Å—Ç—Ä–æ–∏—Ç—å –¥–∏–∞–≥—Ä–∞–º–º—É —Ä–∞—Å—Ö–æ–¥–æ–≤üìä,\n"
        f"–î–æ–±–∞–≤–ª—è—Ç—å –¥–æ—Ö–æ–¥ –∏ —Ä–∞—Å—Ö–æ–¥üí∞,\n"
        f"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Ü–µ–ª–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µüëë.\n"
        f"\n"
        f"–Ø –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –ø—Ä–æ —Ü–µ–Ω–Ω—ã–µ –±—É–º–∞–≥–∏(–∞–∫—Ü–∏—è, –æ–±–ª–∏–≥–∞—Ü–∏—è, –≤–µ–∫—Å–µ–ª—å, —Ñ—å—é—á–µ—Ä—Å. "
        f"–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ '—á—Ç–æ —Ç–∞–∫–æ–µ <—Ü–µ–Ω–Ω–∞—è –±—É–º–∞–≥–∞>'\n"
        f"\n"
        f"–ê –µ—â–µ, –µ—Å–ª–∏ –Ω–∞–ø–∏—à–µ—à—å '–ø—Ä–∏—à–ª–∏ –º–∏–ª—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É' —É–≤–∏–¥–µ—à—å —Å—é—Ä–ø—Ä–∏–∑ :).\n"
        f"\n"
        f"–ï—Å–ª–∏ —Å—Ç–∞–Ω–µ—Ç —Å–∫—É—á–Ω–æ, –º—ã –º–æ–∂–µ–º —Å—ã–≥—Ä–∞—Ç—å –≤ –∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥—É, —Ç–æ–ª—å–∫–æ –Ω–∞–ø–∏—à–∏ '–¥–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º'.\n"
        f"\n"
        f"–ê –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å, —Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ '–ø—Ä–∏–≤–µ—Ç', –∏ –º—ã –ø–æ–±–æ–ª—Ç–∞–µ–º.\n"
        f"–£–¥–∞—á–∏!ü´∂"
        f":)",
        reply_markup=main_menu()
    )


@bot.message_handler(func=lambda m: True)
def handle_actions(message):
    text = message.text.lower()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if text == "–ø—Ä–∏–≤–µ—Ç":
        user_states[message.chat.id] = {"action": "greeting_response"}
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —É —Ç–µ–±—è –¥–µ–ª–∞?")
        return

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    state = user_states.get(message.chat.id)
    if state:
        action = state.get("action")

        # –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
        if action == "greeting_response":
            if any(word in text for word in ["–æ—Ç–ª–∏—á–Ω–æ", "—Å—É–ø–µ—Ä", "—Ö–æ—Ä–æ—à–æ"]):
                bot.send_message(message.chat.id, "–≠—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ! –†–∞–¥ –∑–∞ —Ç–µ–±—è!", reply_markup=main_menu())
            elif any(word in text for word in ["–ø–ª–æ—Ö–æ", "—É–∂–∞—Å–Ω–æ"]):
                bot.send_message(message.chat.id, "–ñ–µ–ª–∞—é —Ç–µ–±–µ –≤—Å–µ–≥–æ —Å–∞–º–æ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ!", reply_markup=main_menu())
            elif any(word in text for word in ["–Ω–æ—Ä–º", "–æ–∫–µ–π", "–æ–∫"]):
                bot.send_message(message.chat.id, "–ß—Ç–æ —É —Ç–µ–±—è —Å–µ–≥–æ–¥–Ω—è —Å–ª—É—á–∏–ª–æ—Å—å?", reply_markup=main_menu())
            else:
                bot.send_message(message.chat.id, "–ü–æ–Ω—è–ª. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=main_menu())
            user_states.pop(message.chat.id)
            return
    if "–¥–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º" in text:
        user_states[message.chat.id] = {"action": "play_rps"}
        bot.send_message(message.chat.id,
                         "–î–∞, –¥–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º –≤ –∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥—É! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –æ–¥–∏–Ω –∏–∑ —ç–º–æ–¥–∑–∏: ‚úÇÔ∏è, ü™®, üóí")
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ö–æ–¥–∞ –∏–≥—Ä—ã
    state = user_states.get(message.chat.id)
    if state:
        action = state.get("action")

        # –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
        if action == "play_rps":
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —ç–º–æ–¥–∑–∏
            user_choice_emoji = message.text.strip()
            options = {"‚úÇÔ∏è": "–Ω–æ–∂–Ω–∏—Ü—ã", "ü™®": "–∫–∞–º–µ–Ω—å", "üóí": "–±—É–º–∞–≥–∞"}
            if user_choice_emoji not in options:
                bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–¥–∏–Ω –∏–∑ —ç–º–æ–¥–∑–∏: ‚úÇÔ∏è, ü™®, üóí")
                return
            # –†–∞–Ω–¥–æ–º–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏ –±–æ—Ç–∞
            bot_choice_emoji = random.choice(list(options.keys()))
            bot_choice_name = options[bot_choice_emoji]
            user_choice_name = options[user_choice_emoji]

            # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
            # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —ç–º–æ–¥–∑–∏
            result_message = f"–¢—ã –≤—ã–±—Ä–∞–ª {user_choice_name} {user_choice_emoji}\n" \
                             f"–Ø –≤—ã–±—Ä–∞–ª {bot_choice_name} {bot_choice_emoji}\n"

            # –í —Å–ª—É—á–∞–µ –Ω–∏—á—å–∏
            if user_choice_emoji == bot_choice_emoji:
                result_message += "–ù–∏—á—å—è!"

            # –í —Å–ª—É—á–∞–µ –≤—ã–∏–≥—Ä—ã—à–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            elif (bot_choice_emoji == "‚úÇÔ∏è" and user_choice_emoji == "ü™®") or \
                    (bot_choice_emoji == "ü™®" and user_choice_emoji == "üóí") or \
                    (bot_choice_emoji == "üóí" and user_choice_emoji == "‚úÇÔ∏è"):
                result_message += "–¢—ã –≤—ã–∏–≥—Ä–∞–ª! üéâ"

            # –í —Å–ª—É—á–∞–µ –≤—ã–∏–≥—Ä—ã—à–∞ –±–æ—Ç–∞
            else:
                result_message += "–Ø –≤—ã–∏–≥—Ä–∞–ª! üòé"

            bot.send_message(message.chat.id, result_message)
            user_states.pop(message.chat.id)
            return
    text = message.text.lower()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    if "–ø—Ä–∏—à–ª–∏ –º–∏–ª—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É" in text:

        # –†–∞–Ω–¥–æ–º–Ω–æ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
        # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è randint, —Ç–∞–∫ –∫–∞–∫ choice –≤—ã–±–∏—Ä–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –¥–≤—É—Ö
        index = random.randint(0, len(cat_pics) - 1)
        pic_url = cat_pics[index]
        bot.send_photo(message.chat.id, pic_url)
        return

    text = message.text.lower()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ —Ü–µ–Ω–Ω—ã–µ –±—É–º–∞–≥–∏
    if "—á—Ç–æ —Ç–∞–∫–æ–µ –∞–∫—Ü–∏—è" in text:
        bot.send_message(message.chat.id, "–ê–∫—Ü–∏—è ‚Äî —ç—Ç–æ —Ü–µ–Ω–Ω–∞—è –±—É–º–∞–≥–∞, –¥–∞—é—â–∞—è –≤–ª–∞–¥–µ–ª—å—Ü—É –ø—Ä–∞–≤–æ –Ω–∞ –¥–æ–ª—é –≤ –∫–æ–º–ø–∞–Ω–∏–∏, "
                                          "—É—á–∞—Å—Ç–∏–µ –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –µ—é, –∞ —Ç–∞–∫–∂–µ –Ω–∞ –¥–æ–ª—é –≤ –µ—ë –ø—Ä–∏–±—ã–ª–∏ –≤ –≤–∏–¥–µ –¥–∏–≤–∏–¥–µ–Ω–¥–æ–≤."
                                          "–ï—â—ë –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–æ–≤–∞ ¬´–∞–∫—Ü–∏—è¬ª ‚Äî –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –¥–ª—è "
                                          "–ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, "
                                          "—Å–∫–∏–¥–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä—ã –∏ —É—Å–ª—É–≥–∏, –ø–æ–¥–∞—Ä–∫–∏ –∑–∞ –ø–æ–∫—É–ø–∫—É, –±–æ–Ω—É—Å–Ω—ã–µ –∏ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–µ "
                                          "–ø—Ä–æ–≥—Ä–∞–º–º—ã, —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∏). ", reply_markup=main_menu())
        return

    text = message.text.lower()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ —Ü–µ–Ω–Ω—ã–µ –±—É–º–∞–≥–∏
    if "—á—Ç–æ —Ç–∞–∫–æ–µ –æ–±–ª–∏–≥–∞—Ü–∏—è" in text:
        bot.send_message(message.chat.id, "–û–±–ª–∏–≥–∞—Ü–∏—è ‚Äî —ç—Ç–æ –¥–æ–ª–≥–æ–≤–∞—è —Ü–µ–Ω–Ω–∞—è –±—É–º–∞–≥–∞, –≤–ª–∞–¥–µ–ª–µ—Ü –∫–æ—Ç–æ—Ä–æ–π "
                                          "–∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –ø–æ–ª—É—á–∏—Ç—å –µ—ë –Ω–æ–º–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–µ–Ω—å–≥–∞–º–∏ –∏–ª–∏ –∏–º—É—â–µ—Å—Ç–≤–æ–º "
                                          "–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –µ—é —Å—Ä–æ–∫ –æ—Ç —Ç–æ–≥–æ, –∫—Ç–æ –µ—ë –≤—ã–ø—É—Å—Ç–∏–ª (—ç–º–∏—Ç–µ–Ω—Ç–∞) "
                                          "2.–ü—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏, –∏–Ω–≤–µ—Å—Ç–æ—Ä –¥–∞—ë—Ç –≤ –¥–æ–ª–≥ –∫–æ–º–ø–∞–Ω–∏–∏ –∏–ª–∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤—É —Å "
                                          "—É—Å–ª–æ–≤–∏–µ–º, —á—Ç–æ —ç—Ç–∏ –¥–µ–Ω—å–≥–∏ –≤–µ—Ä–Ω—É—Ç –≤ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–µ–Ω—å —Å –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏",
                         reply_markup=main_menu())
        return
    text = message.text.lower()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ —Ü–µ–Ω–Ω—ã–µ –±—É–º–∞–≥–∏
    if "—á—Ç–æ —Ç–∞–∫–æ–µ —Ñ—å—é—á–µ—Ä—Å" in text:
        bot.send_message(message.chat.id, "–§—å—é—á–µ—Ä—Å ‚Äî —ç—Ç–æ –¥–æ–≥–æ–≤–æ—Ä –º–µ–∂–¥—É –¥–≤—É–º—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º–∏ –æ –ø–æ–∫—É–ø–∫–µ –∏–ª–∏ "
                                          "–ø—Ä–æ–¥–∞–∂–µ –∞–∫—Ç–∏–≤–∞ –ø–æ –∑–∞—Ä–∞–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–π —Ü–µ–Ω–µ –∏ –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—É—é –¥–∞—Ç—É –≤ –±—É–¥—É—â–µ–º. "
                                          "–û–≥–æ–≤–æ—Ä—ë–Ω–Ω–∞—è —Ü–µ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–µ —Ä–æ—Å—Ç–∞ –∏–ª–∏ –ø–∞–¥–µ–Ω–∏—è —Ü–µ–Ω—ã "
                                          "–Ω–∞ –∞–∫—Ç–∏–≤ –≤ –º–æ–º–µ–Ω—Ç —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏. "
                                          "–ü—Ä–æ–¥–∞–≤–µ—Ü –∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –æ–±—è–∑–∞–Ω—ã —Å–æ–≤–µ—Ä—à–∏—Ç—å —Å–¥–µ–ª–∫—É –Ω–∞ —Ç–µ—Ö —É—Å–ª–æ–≤–∏—è—Ö, "
                                          "–∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã –≤ –¥–æ–≥–æ–≤–æ—Ä–µ.",
                         reply_markup=main_menu())
        return
    text = message.text.lower()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ —Ü–µ–Ω–Ω—ã–µ –±—É–º–∞–≥–∏
    if "—á—Ç–æ —Ç–∞–∫–æ–µ –≤–µ–∫—Å–µ–ª—å" in text:
        bot.send_message(message.chat.id, "–í–µ–∫—Å–µ–ª—å ‚Äî —ç—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ä–Ω–∞—è —Ü–µ–Ω–Ω–∞—è –±—É–º–∞–≥–∞, "
                                          "–≤ –∫–æ—Ç–æ—Ä–æ–π –≤ –ø–∏—Å—å–º–µ–Ω–Ω–æ–º –≤–∏–¥–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ –æ–±–µ—â–∞–Ω–∏–µ –æ–¥–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –≤—ã–ø–ª–∞—Ç–∏—Ç—å "
                                          "–¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—É—é —Å—É–º–º—É –¥–µ–Ω–µ–≥ –ª–∏–±–æ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é –ø–æ—Å–ª–µ–¥–Ω–µ–π, –ª–∏–±–æ "
                                          "–≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∞—Ç—É 1.–û—Å–Ω–æ–≤–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–µ–∫—Å–µ–ª—è ‚Äî –∫—Ä–µ–¥–∏—Ç–Ω–∞—è 1."
                                          " –° –ø–æ–º–æ—â—å—é –≤–µ–∫—Å–µ–ª—è –æ—Ñ–æ—Ä–º–ª—è—é—Ç—Å—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞: –æ–ø–ª–∞—Ç–∞ "
                                          "—Ç–æ–≤–∞—Ä–∞ –∏–ª–∏ —É—Å–ª—É–≥–∏, –≤–æ–∑–≤—Ä–∞—Ç –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞, "
                                          "–æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ —Å—Å—É–¥—ã –∏ —Ç. –¥.",
                         reply_markup=main_menu())
        return
    text = message.text
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –¥–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥
    if text == "–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥":
        user_states[message.chat.id] = {"action": "add_income"}
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –¥–æ—Ö–æ–¥–∞:")
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥
    elif text == "–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥":
        user_states[message.chat.id] = {"action": "add_expense"}
        bot.send_message(message.chat.id,
                         f"–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É —Ä–∞—Å—Ö–æ–¥–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\n"
                         f"{', '.join(CATEGORIES)}\n–ü—Ä–∏–º–µ—Ä: 500 –º–µ–¥–∏—Ü–∏–Ω–∞")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å
    elif text == "–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å":
        bot.send_message(message.chat.id, f"–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {data['balance']} —Ä—É–±", reply_markup=main_menu())

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–∫–∞–∑–∞—Ç—å —Ü–µ–ª–∏
    elif text == "–ü–æ–∫–∞–∑–∞—Ç—å —Ü–µ–ª–∏":

        # –≤—ã–≤–æ–¥ —Ü–µ–ª–µ–π
        if not data["financial_goals"]:
            bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π.", reply_markup=main_menu())
        else:
            # –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π
            response = "–í–∞—à–∏ —Ü–µ–ª–∏:\n"
            for goal in data["financial_goals"].values():
                response += f"–¶–µ–ª—å: {goal['goal']}, –°—É–º–º–∞: {goal['amount']}, –¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: {goal['progress']}\n"
            bot.send_message(message.chat.id, response, reply_markup=main_menu())

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –±—é–¥–∂–µ—Ç–∞
    elif text == "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±—é–¥–∂–µ—Ç":
        user_states[message.chat.id] = {"action": "set_budget"}
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –±—é–¥–∂–µ—Ç–∞:")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ü–µ–ª–∏
    elif text == "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª—å":
        user_states[message.chat.id] = {"action": "set_goal"}
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ª–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:")

    # –í—ã–≤–æ–¥ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –ø–æ–º–æ—â—å—é matplotlib
    elif text == "–î–∏–∞–≥—Ä–∞–º–º–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤":
        # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        categories = CATEGORIES
        # –î–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–µ—Ä–µ–º —Å—É–º–º—É —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏–ª–∏ 0, –µ—Å–ª–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –Ω–µ–π –Ω–µ—Ç
        amounts = [data["expenses"].get(cat, 0) for cat in categories]

        try:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ñ–∏–≥—É—Ä—É –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º
            plt.figure(figsize=(10, 6))

            # –°—Ç—Ä–æ–∏–º —Å—Ç–æ–ª–±—á–∞—Ç—É—é –¥–∏–∞–≥—Ä–∞–º–º—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏ –∏—Ö —Ä–∞—Å—Ö–æ–¥–∞–º–∏
            plt.bar(categories, amounts, color='gold')

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–¥–ø–∏—Å—å –æ—Å–∏ X
            plt.xlabel("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏")

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–¥–ø–∏—Å—å –æ—Å–∏ Y
            plt.ylabel("–†–∞—Å—Ö–æ–¥—ã (–≤ —Ä—É–±–ª—è—Ö)")

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≥—Ä–∞—Ñ–∏–∫–∞
            plt.title("–†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")

            # –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ –æ—Å–∏ X –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
            plt.xticks(rotation=45)

            # –ü–æ–¥–≥–æ–Ω—è–µ–º –º–∞–∫–µ—Ç, —á—Ç–æ–±—ã –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ–º–µ—Å—Ç–∏–ª–∏—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
            plt.tight_layout()

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞
            filename = "expense_chart.png"

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥—Ä–∞—Ñ–∏–∫ –≤ —Ñ–∞–π–ª
            plt.savefig(filename)

            # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Ñ–∏–≥—É—Ä—É, —á—Ç–æ–±—ã –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –ø–∞–º—è—Ç—å
            plt.close()

            # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ –±–∏–Ω–∞—Ä–Ω–æ–º —Ä–µ–∂–∏–º–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            with open(filename, 'rb') as photo:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —á–∞—Ç –±–æ—Ç–∞
                bot.send_photo(message.chat.id, photo)
        except Exception as e:
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏–∞–≥—Ä–∞–º–º—ã: {e}")
    else:
        state = user_states.get(message.chat.id)
        if state:
            action = state.get("action")
            # –ê—Ç–∏–≤–∞—Ü–∏—è –¥–µ–π—Å—Ç–≤–∏—è add_income

            if action == "add_income":
                try:
                    amount = float(message.text)
                    data["balance"] += amount
                    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                    data["allmoney"].append({"type": "income", "money": amount, "description": "", "date": now})
                    bot.send_message(message.chat.id, f"–î–æ—Ö–æ–¥ –≤ —Ä–∞–∑–º–µ—Ä–µ {amount} —Ä—É–± –¥–æ–±–∞–≤–ª–µ–Ω.",
                                     reply_markup=main_menu())
                except:
                    bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                finally:
                    user_states.pop(message.chat.id)

            elif action == "add_expense":

                try:

                    parts = message.text.split()

                    if len(parts) < 2:
                        raise ValueError("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö")

                    amount_str = parts[0]

                    category_input = ' '.join(parts[1:]).strip()

                    amount = float(amount_str)

                    # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è

                    category_input_lower = category_input.lower()

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (—É—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä)

                    categories_lower = [cat.lower() for cat in CATEGORIES]

                    if category_input_lower not in categories_lower:
                        bot.send_message(

                            message.chat.id,

                            f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category_input}' –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞:\n"

                            f"{', '.join(CATEGORIES)}",

                            reply_markup=main_menu()

                        )

                        return

                    # –ù–∞—Ö–æ–¥–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é

                    index = categories_lower.index(category_input_lower)

                    category_actual = CATEGORIES[index]

                    # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –∏ —Ä–∞—Å—Ö–æ–¥—ã

                    data["balance"] -= amount

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤ –≤ –¥–∞–Ω–Ω—ã—Ö
                    if category_actual in data["expenses"]:
                        # –ï—Å–ª–∏ –¥–∞, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—É–º–º—É —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ —Ç–µ–∫—É—â–∏–π —Ä–∞—Å—Ö–æ–¥
                        data["expenses"][category_actual] += amount
                    else:
                        # –ï—Å–ª–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å —Ç–µ–∫—É—â–∏–º —Ä–∞—Å—Ö–æ–¥–æ–º
                        data["expenses"][category_actual] = amount

                    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú:–°–°"
                    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

                    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ —Ä–∞—Å—Ö–æ–¥–µ –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
                    data["allmoney"].append({
                        "type": "expense",  # –¢–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ ‚Äî —Ä–∞—Å—Ö–æ–¥
                        "amount": amount,  # –°—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–∞
                        "description": category_actual,  # –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ä–∞—Å—Ö–æ–¥–∞
                        "date": now  # –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
                    })

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–∞—Å—Ö–æ–¥–∞
                    bot.send_message(
                        message.chat.id,
                        f"–†–∞—Å—Ö–æ–¥ –≤ —Ä–∞–∑–º–µ—Ä–µ {amount} —Ä—É–± –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category_actual}' –¥–æ–±–∞–≤–ª–µ–Ω.",
                        reply_markup=main_menu()
                    )
                except Exception as e:

                    print(f"Error: {e}")

                    bot.send_message(

                        message.chat.id,

                        "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: [—Å—É–º–º–∞] [–∫–∞—Ç–µ–≥–æ—Ä–∏—è]",

                        reply_markup=main_menu()

                    )

                finally:

                    user_states.pop(message.chat.id)
            elif action == "set_budget":
                try:
                    budget_value = float(message.text)
                    data["budget"] = int(budget_value)
                    bot.send_message(
                        message.chat.id,
                        f"–ë—é–¥–∂–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {budget_value} —Ä—É–±.",
                        reply_markup=main_menu()
                    )
                except:
                    bot.send_message(
                        message.chat.id,
                        "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                        reply_markup=main_menu()
                    )
                finally:
                    user_states.pop(message.chat.id)

            elif action == "set_goal":
                try:
                    # –†–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –ø—Ä–æ–±–µ–ª–∞–º
                    parts = message.text.split()
                    # –ü–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ ‚Äî —ç—Ç–æ —Å—É–º–º–∞ —Ü–µ–ª–∏, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–≥–æ –≤ —á–∏—Å–ª–æ
                    amount = float(parts[0])
                    # –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞ –æ–±—ä–µ–¥–∏–Ω—è–µ–º –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ª–∏
                    goal_name = ' '.join(parts[1:])

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è —Ü–µ–ª—å
                    if goal_name not in data["financial_goals"]:
                        # –ï—Å–ª–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ü–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—É–º–º–æ–π –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º 0
                        data["financial_goals"][goal_name] = {
                            "goal": goal_name,
                            "amount": amount,
                            "progress": 0.0,
                        }
                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ —Ü–µ–ª–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
                        bot.send_message(
                            message.chat.id,
                            f'–¶–µ–ª—å "{goal_name}" —Å —Å—É–º–º–æ–π {amount} –±—ã–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.',
                            reply_markup=main_menu()
                        )
                    else:
                        # –ï—Å–ª–∏ —Ü–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        bot.send_message(
                            message.chat.id,
                            f'–¶–µ–ª—å "{goal_name}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.',
                            reply_markup=main_menu()
                        )
                except:
                    # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞), —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    bot.send_message(
                        message.chat.id,
                        '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: [—Å—É–º–º–∞] [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ª–∏]',
                        reply_markup=main_menu()
                    )
                finally:
                    # –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —É–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ª–æ–≤–∞—Ä—è
                    user_states.pop(message.chat.id)


bot.polling(none_stop=True)
